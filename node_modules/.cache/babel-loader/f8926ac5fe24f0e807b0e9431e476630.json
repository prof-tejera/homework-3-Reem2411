{"ast":null,"code":"var _jsxFileName = \"/Users/reem/Desktop/HES/FALL 2021/CS39/JS and Components/HW3/src/Pager/Pager.js\";\nimport { Component } from 'react';\nimport Panel from 'components/Panel/Panel';\nimport Button from 'components/Button/Button';\nimport './Pager.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Pager extends Component {\n  constructor() {\n    super(); // Initalize page number \n    // The state contains data specific to this component that may change over time. (Page will be changed/updated with onClick function)\n\n    this.state = {\n      page: 0\n    };\n  } // Then render each page as it is clicked on it\n\n\n  render() {\n    // PART 1 - Just create the bar \n    // Get the page number attribute to track the number of pages to show  \n    const {\n      num_pages\n    } = this.props; // Create list of pages that will be rendered in the app \n\n    const pages_to_show = []; // Create a button for each page to make it more generic \n\n    for (let i = 0; i < num_pages; i++) {\n      // Add to list of pages that will be rendered in app \n      pages_to_show.push(\n      /*#__PURE__*/\n      // Use the same button function from mediabuttons \n      _jsxDEV(Button, {\n        text: i + 1,\n        curr: i === this.state.curr,\n        onClick: () => {\n          // update state using setState .. updating this.state doesn't work \n          this.setState({\n            page: i\n          }); // This isn't showing in console :( \n\n          console.log('In Pager, button was clicked!');\n        }\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this));\n    } // Part 2 \n    // BONUS - What props can I pass in that will make the component more configurable?\n\n\n    if (num_pages > 6) {\n      // Get the beginning of the pager and the end of it\n      const start = pages_to_show.slice(0, 3);\n      const end = pages_to_show.slice(-1); // return the pages to show \n\n      return /*#__PURE__*/_jsxDEV(Panel, {\n        children: [\" \", start, \" ... \", end, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Panel, {\n        children: [\" \", pages_to_show, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n}\n\nexport default Pager;","map":{"version":3,"sources":["/Users/reem/Desktop/HES/FALL 2021/CS39/JS and Components/HW3/src/Pager/Pager.js"],"names":["Component","Panel","Button","Pager","constructor","state","page","render","num_pages","props","pages_to_show","i","push","curr","setState","console","log","start","slice","end"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAO,aAAP;;;AAGA,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAC5BI,EAAAA,WAAW,GAAI;AACb,YADa,CAGb;AACA;;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAb;AACD,GAP2B,CAS5B;;;AACAC,EAAAA,MAAM,GAAG;AAEP;AACA;AACA,UAAM;AAACC,MAAAA;AAAD,QAAc,KAAKC,KAAzB,CAJO,CAMP;;AACA,UAAMC,aAAa,GAAG,EAAtB,CAPO,CASP;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,SAApB,EAA+BG,CAAC,EAAhC,EAAoC;AAElC;AAEAD,MAAAA,aAAa,CAACE,IAAd;AAAA;AACE;AACA,cAAC,MAAD;AAAgB,QAAA,IAAI,EAAED,CAAC,GAAC,CAAxB;AAA2B,QAAA,IAAI,EAAEA,CAAC,KAAK,KAAKN,KAAL,CAAWQ,IAAlD;AAAwD,QAAA,OAAO,EAAE,MAAM;AACrE;AACA,eAAKC,QAAL,CAAc;AAACR,YAAAA,IAAI,EAAEK;AAAP,WAAd,EAFqE,CAIrE;;AACAI,UAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AAGD;AARD,SAAaL,CAAb;AAAA;AAAA;AAAA;AAAA,cAFF;AAYD,KA1BM,CA4BP;AACA;;;AACA,QAAIH,SAAS,GAAG,CAAhB,EAAmB;AAEjB;AACA,YAAMS,KAAK,GAAGP,aAAa,CAACQ,KAAd,CAAoB,CAApB,EAAsB,CAAtB,CAAd;AACA,YAAMC,GAAG,GAAGT,aAAa,CAACQ,KAAd,CAAoB,CAAC,CAArB,CAAZ,CAJiB,CAMjB;;AACA,0BAAQ,QAAC,KAAD;AAAA,wBAASD,KAAT,WAAqBE,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AACD,KARD,MAQO;AACL,0BAAO,QAAC,KAAD;AAAA,wBAAST,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF;;AAnD2B;;AAyD9B,eAAeP,KAAf","sourcesContent":["import { Component } from 'react';\nimport Panel from 'components/Panel/Panel';\nimport Button from 'components/Button/Button';\nimport './Pager.css';\n\n\nclass Pager extends Component {\n  constructor () {\n    super(); \n\n    // Initalize page number \n    // The state contains data specific to this component that may change over time. (Page will be changed/updated with onClick function)\n    this.state = {page: 0}\n  }\n\n  // Then render each page as it is clicked on it\n  render (){\n\n    // PART 1 - Just create the bar \n    // Get the page number attribute to track the number of pages to show  \n    const {num_pages} = this.props; \n    \n    // Create list of pages that will be rendered in the app \n    const pages_to_show = [];\n\n    // Create a button for each page to make it more generic \n    for (let i = 0; i < num_pages; i++) {\n\n      // Add to list of pages that will be rendered in app \n\n      pages_to_show.push(\n        // Use the same button function from mediabuttons \n        <Button key={i} text={i+1} curr={i === this.state.curr} onClick={() => {\n          // update state using setState .. updating this.state doesn't work \n          this.setState({page: i});\n\n          // This isn't showing in console :( \n          console.log('In Pager, button was clicked!'); \n\n          \n        }}/>,\n      );\n    }  \n    \n    // Part 2 \n    // BONUS - What props can I pass in that will make the component more configurable?\n    if (num_pages > 6) {\n\n      // Get the beginning of the pager and the end of it\n      const start = pages_to_show.slice(0,3);\n      const end = pages_to_show.slice(-1);\n\n      // return the pages to show \n      return (<Panel> {start} ... {end} </Panel> ); \n    } else {\n      return <Panel> {pages_to_show} </Panel>;\n    }    \n  }\n}\n\n\n\n\nexport default Pager;\n"]},"metadata":{},"sourceType":"module"}